// --------------------------------------------------------
// Code generated by Papyrus Java
// --------------------------------------------------------

package restaurants;

/************************************************************/
/**
 * class that represent a dish/ class is inherited by other classes (starter, mainDish, dessert)
 * 
 * @author Patrick
 */
public class Dish {
	
	private String name;
	private double price;
	private String type;
	
	/**
	 * @param name = name of the dish f.e. "spaghetti"
	 * @param price = price of the dish
	 * @param type = each dish can have a different type f.e. "vegetarian"
	 * 
	 * the constructor is protected so that a class of type Dish can not be created from the outside but only by its subclasses
	 */
	protected Dish(String name, double price, String type) {
		super();
		this.name = name;
		this.price = price;
		this.type = type;
	}

	/************************************************************
	 * Getters and Setters 
	 */

	public String getName() {
		return name;
	}



	public void setName(String name) {
		this.name = name;
	}



	public String getType() {
		return type;
	}



	public void setType(String type) {
		this.type = type;
	}



	public void setPrice(double price) {
		this.price = price;
	}



	public double getPrice() {
		return price;
	}

	/***********************************************************/

	@Override
	public String toString() {
		return "Dish [name=" + name + ", price=" + price + ", type=" + type + "]";
	}
	
	@Override
	public boolean equals(Object obj) {
		
		if(obj instanceof Dish){
			Dish dish = (Dish) obj;
			if(dish.getName().equals(name) && dish.getType().equals(type) && dish.getPrice() == price){
				return true;
			}
			return false;
		}
		return false;
	}
};
